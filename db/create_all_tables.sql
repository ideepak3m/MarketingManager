-- Complete Table Creation Script for Marketing Manager
-- Based on actual Supabase schema exported 2025-10-16
-- Use this as backup or to recreate tables if needed

-- Enable UUID extension if not already enabled
CREATE EXTENSION IF NOT EXISTS "uuid-ossp";

-- Table: campaign_capture_byNova (Raw campaign data from n8n)
CREATE TABLE IF NOT EXISTS public.campaign_capture_byNova (
    id bigint NOT NULL DEFAULT nextval('campaign_capture_byNova_id_seq'::regclass),
    created_at timestamp with time zone NOT NULL DEFAULT now(),
    campaign text,
    summaryText text,
    missingFields text,
    sessionId uuid,
    userEmail text,
    CONSTRAINT campaign_capture_byNova_pkey PRIMARY KEY (id)
);

-- Table: campaigns (Structured campaign information)
CREATE TABLE IF NOT EXISTS public.campaigns (
    id uuid NOT NULL DEFAULT gen_random_uuid(),
    user_id text,
    name text NOT NULL,
    description text,
    campaign_type text NOT NULL,
    status text DEFAULT 'draft'::text,
    start_date timestamp with time zone,
    end_date timestamp with time zone,
    created_at timestamp with time zone DEFAULT now(),
    updated_at timestamp with time zone DEFAULT now(),
    budget numeric(10,2) DEFAULT 0,
    target_audience jsonb,
    goals jsonb,
    target_metrics jsonb,
    platforms text[] DEFAULT '{}'::text[],
    total_reach integer DEFAULT 0,
    total_impressions integer DEFAULT 0,
    total_engagement integer DEFAULT 0,
    total_clicks integer DEFAULT 0,
    total_conversions integer DEFAULT 0,
    total_spent numeric(10,2) DEFAULT 0,
    number_of_phases integer DEFAULT 0,
    campaign_length text,
    summary_text text,
    created_by_ai boolean DEFAULT true,
    ai_model_version text DEFAULT 'Nova-1.0'::text,
    CONSTRAINT campaigns_pkey PRIMARY KEY (id)
);

-- Table: campaign_phases (Campaign phase details)
CREATE TABLE IF NOT EXISTS public.campaign_phases (
    id uuid NOT NULL DEFAULT gen_random_uuid(),
    campaign_id uuid,
    user_id text,
    name text NOT NULL,
    description text,
    phase_order integer NOT NULL,
    start_date timestamp with time zone NOT NULL,
    end_date timestamp with time zone NOT NULL,
    status text DEFAULT 'planned'::text,
    goals jsonb,
    target_metrics jsonb,
    created_at timestamp with time zone DEFAULT now(),
    updated_at timestamp with time zone DEFAULT now(),
    content_strategy text,
    recommended_content_types text[] DEFAULT '{}'::text[],
    recommended_platforms text[] DEFAULT '{}'::text[],
    CONSTRAINT campaign_phases_pkey PRIMARY KEY (id)
);

-- Table: campaign_reports (Campaign reporting data)
CREATE TABLE IF NOT EXISTS public.campaign_reports (
    id uuid NOT NULL DEFAULT gen_random_uuid(),
    campaign_id uuid,
    user_id text,
    report_type text DEFAULT 'campaign_plan'::text,
    report_title text NOT NULL,
    summary_text text NOT NULL,
    pdf_url text,
    pdf_generated_at timestamp with time zone,
    pdf_status text DEFAULT 'pending'::text,
    generated_by_ai boolean DEFAULT true,
    ai_model_version text DEFAULT 'Nova-1.0'::text,
    company_branding jsonb DEFAULT '{"website": "www.priorityonetech.ca", "ai_credit": "Generated by AI developed by Priority One Tech Inc", "company_name": "Priority One Tech Inc"}'::jsonb,
    download_count integer DEFAULT 0,
    last_downloaded_at timestamp with time zone,
    created_at timestamp with time zone DEFAULT now(),
    updated_at timestamp with time zone DEFAULT now(),
    CONSTRAINT campaign_reports_pkey PRIMARY KEY (id)
);

-- Table: profiles (User profiles)
CREATE TABLE IF NOT EXISTS public.profiles (
    id uuid NOT NULL,
    email text,
    full_name text,
    avatar_url text,
    created_at timestamp with time zone DEFAULT now(),
    updated_at timestamp with time zone DEFAULT now(),
    CONSTRAINT profiles_pkey PRIMARY KEY (id)
);

-- Table: content (Content management)
CREATE TABLE IF NOT EXISTS public.content (
    id uuid NOT NULL DEFAULT gen_random_uuid(),
    campaign_id uuid,
    user_id text,
    title text NOT NULL,
    content_type text NOT NULL,
    content_text text,
    content_url text,
    platform text,
    status text DEFAULT 'draft'::text,
    scheduled_for timestamp with time zone,
    published_at timestamp with time zone,
    created_at timestamp with time zone DEFAULT now(),
    updated_at timestamp with time zone DEFAULT now(),
    CONSTRAINT content_pkey PRIMARY KEY (id)
);

-- Table: posts (Social media posts)
CREATE TABLE IF NOT EXISTS public.posts (
    id uuid NOT NULL DEFAULT gen_random_uuid(),
    content_id uuid,
    campaign_id uuid,
    user_id text,
    platform text NOT NULL,
    post_text text,
    media_urls text[],
    post_url text,
    status text DEFAULT 'draft'::text,
    scheduled_for timestamp with time zone,
    published_at timestamp with time zone,
    created_at timestamp with time zone DEFAULT now(),
    updated_at timestamp with time zone DEFAULT now(),
    CONSTRAINT posts_pkey PRIMARY KEY (id)
);

-- Table: social_metrics (Social media analytics)
CREATE TABLE IF NOT EXISTS public.social_metrics (
    id uuid NOT NULL DEFAULT gen_random_uuid(),
    post_id uuid,
    campaign_id uuid,
    platform text NOT NULL,
    metric_type text NOT NULL,
    metric_value integer DEFAULT 0,
    recorded_at timestamp with time zone DEFAULT now(),
    created_at timestamp with time zone DEFAULT now(),
    CONSTRAINT social_metrics_pkey PRIMARY KEY (id)
);

-- Create sequences for bigint columns if they don't exist
CREATE SEQUENCE IF NOT EXISTS campaign_capture_byNova_id_seq
    AS bigint
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;

-- Set sequence ownership
ALTER SEQUENCE campaign_capture_byNova_id_seq OWNED BY public.campaign_capture_byNova.id;

-- Add foreign key constraints
ALTER TABLE ONLY public.campaign_phases
    ADD CONSTRAINT campaign_phases_campaign_id_fkey 
    FOREIGN KEY (campaign_id) REFERENCES public.campaigns(id) ON DELETE CASCADE;

ALTER TABLE ONLY public.campaign_reports
    ADD CONSTRAINT campaign_reports_campaign_id_fkey 
    FOREIGN KEY (campaign_id) REFERENCES public.campaigns(id) ON DELETE CASCADE;

ALTER TABLE ONLY public.content
    ADD CONSTRAINT content_campaign_id_fkey 
    FOREIGN KEY (campaign_id) REFERENCES public.campaigns(id) ON DELETE CASCADE;

ALTER TABLE ONLY public.posts
    ADD CONSTRAINT posts_content_id_fkey 
    FOREIGN KEY (content_id) REFERENCES public.content(id) ON DELETE CASCADE;

ALTER TABLE ONLY public.posts
    ADD CONSTRAINT posts_campaign_id_fkey 
    FOREIGN KEY (campaign_id) REFERENCES public.campaigns(id) ON DELETE CASCADE;

ALTER TABLE ONLY public.social_metrics
    ADD CONSTRAINT social_metrics_post_id_fkey 
    FOREIGN KEY (post_id) REFERENCES public.posts(id) ON DELETE CASCADE;

ALTER TABLE ONLY public.social_metrics
    ADD CONSTRAINT social_metrics_campaign_id_fkey 
    FOREIGN KEY (campaign_id) REFERENCES public.campaigns(id) ON DELETE CASCADE;

-- Enable Row Level Security (RLS) on all tables
ALTER TABLE public.campaign_capture_byNova ENABLE ROW LEVEL SECURITY;
ALTER TABLE public.campaigns ENABLE ROW LEVEL SECURITY;
ALTER TABLE public.campaign_phases ENABLE ROW LEVEL SECURITY;
ALTER TABLE public.campaign_reports ENABLE ROW LEVEL SECURITY;
ALTER TABLE public.profiles ENABLE ROW LEVEL SECURITY;
ALTER TABLE public.content ENABLE ROW LEVEL SECURITY;
ALTER TABLE public.posts ENABLE ROW LEVEL SECURITY;
ALTER TABLE public.social_metrics ENABLE ROW LEVEL SECURITY;

-- Create indexes for better performance
CREATE INDEX IF NOT EXISTS campaign_capture_byNova_userEmail_idx ON public.campaign_capture_byNova(userEmail);
CREATE INDEX IF NOT EXISTS campaign_capture_byNova_sessionId_idx ON public.campaign_capture_byNova(sessionId);
CREATE INDEX IF NOT EXISTS campaign_capture_byNova_created_at_idx ON public.campaign_capture_byNova(created_at);

CREATE INDEX IF NOT EXISTS campaigns_user_id_idx ON public.campaigns(user_id);
CREATE INDEX IF NOT EXISTS campaigns_status_idx ON public.campaigns(status);
CREATE INDEX IF NOT EXISTS campaigns_created_at_idx ON public.campaigns(created_at);

CREATE INDEX IF NOT EXISTS campaign_phases_campaign_id_idx ON public.campaign_phases(campaign_id);
CREATE INDEX IF NOT EXISTS campaign_phases_user_id_idx ON public.campaign_phases(user_id);
CREATE INDEX IF NOT EXISTS campaign_phases_phase_order_idx ON public.campaign_phases(phase_order);

CREATE INDEX IF NOT EXISTS campaign_reports_campaign_id_idx ON public.campaign_reports(campaign_id);
CREATE INDEX IF NOT EXISTS campaign_reports_user_id_idx ON public.campaign_reports(user_id);

-- Grant permissions
GRANT USAGE ON SCHEMA public TO anon, authenticated;
GRANT ALL ON ALL TABLES IN SCHEMA public TO anon, authenticated;
GRANT ALL ON ALL SEQUENCES IN SCHEMA public TO anon, authenticated;

-- Note: RLS policies need to be created separately based on your specific requirements
-- This script focuses on table structure and basic constraints